version: "3.9"

services:

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  app:
    build:
      context: .           
      dockerfile: Dockerfile
    depends_on:
      - kafka
    command: python scheduler.py
    env_file:
      - .env
    network_mode: host
    restart: always               

  tiktok_gatherer:
    build:
      context: ./gatherers/tiktok
      dockerfile: Dockerfile
    network_mode: host
    depends_on:
      - kafka
    command: python tiktok_gatherer.py
    env_file:
      - ./gatherers/tiktok/.env
    restart: always

  mongo_writer:
    build:
      context: ./consumers/mongo_writer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    command: python mongo_writer.py
    env_file:
      - .env
    network_mode: host
    restart: always
